name: Build Deploy Demo for OpenAI
on:
  push:
    branches:
      - master

  # Allow mannually trigger 
  workflow_dispatch: 
  
env:
  dotnet_version: '6.x.x'
  Azure_Resource_GroupName: 'rg-LearningDictionary'
  Azure_Resource_GroupLocation: 'eastus2'
  dotnet_buildConfiguration: 'Release'
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:

  ################################################################
  # Stage: Deploy Infrastructure
  ################################################################  
  deploy_infrastructure:
    runs-on: ubuntu-latest
    outputs:
      output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}
      output_keyvaultName: ${{ steps.Infra.outputs.out_keyvaultName }}

    name: Deploy Infrastructure
    steps:
    - uses: actions/checkout@master

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }}

    - name: Set Subscription ID
      run: echo "SUBSCRIPTION_ID=$(az account show --query id -o tsv)" >> $GITHUB_ENV

    - name: Display Subscription ID
      run: echo "Current Subscription ID is $SUBSCRIPTION_ID"

    # Check if Resource Group Exists
    - name: Ensure Resource Group Exists
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          #!/bin/bash
          az group create --name ${{ env.Azure_Resource_GroupName }} --location ${{ env.Azure_Resource_GroupLocation }}

    # Unlock Resource Group
    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: List To-be-Purged soft-deleted instance of APIM
      #if: contains(github.event_name, 'push')
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az rest --method get --header "Accept=application/json" -u 'https://management.azure.com/subscriptions/${{ env.SUBSCRIPTION_ID }}/providers/Microsoft.ApiManagement/deletedservices?api-version=2022-04-01-preview'

    # - name: Set short git commit SHA
    #   id: vars
    #   run: |
    #     calculatedSha=$(git rev-parse --short ${{ github.sha }})
    #     echo "::set-output name=short_sha::$calculatedSha"

    # - name: Confirm git commit SHA output
    #   run: echo ${{ steps.vars.outputs.short_sha }}

    # Deploy ARM Template using Bicep DSL
    - name: Infrastructure Deploy
      id: Infra
      uses: azure/arm-deploy@v1
      continue-on-error: false
      with:
        resourceGroupName: ${{ env.Azure_Resource_GroupName }}
        template: ./IaC/main.bicep
        parameters: ./IaC/main.params.json Deployed_Environment='Dev' 
        failOnStdErr: false

    # Update/Set OpenAPIKey password in Key Vault
    - name: 'Update Key Vault secret for OpenAI_APIKEY'
      id: GetKVACRValues
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt
          result=$(az keyvault secret set \
                      --name "OpenAIAPIKey" \
                      --vault-name "${{ steps.Infra.outputs.out_keyvaultName }}" \
                      --value ${{ secrets.OpenAI_APIKEY }})

    # Refresh the secret from Key Vault immediately for the Named Value specified
    # Otherwise, there will be a much longer delay on Azure.
    - name: Refresh Key Vault secret in APIM for OpenAI_APIKEY named value
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az rest --method post --uri 'https://management.azure.com/subscriptions/${{ env.SUBSCRIPTION_ID }}/resourceGroups/${{ env.Azure_Resource_GroupName }}/providers/Microsoft.ApiManagement/service/${{ steps.Infra.outputs.out_apiServiceName }}/namedValues/OpenAIAPIKey/refreshSecret?api-version=2022-04-01-preview'

    - name: DEBUG ONLY Display Output Variables
      run: |
         echo 'output_webSiteName: ${{ steps.Infra.outputs.out_webSiteName }}'
         echo 'output_keyvaultName: ${{ steps.Infra.outputs.out_keyvaultName }}'
         echo 'output_appInsightsName: ${{ steps.Infra.outputs.out_appInsightsName }}'
         echo 'output_functionAppName: ${{ steps.Infra.outputs.out_functionAppName }}'
         echo 'output_apiServiceName: ${{ steps.Infra.outputs.out_apiServiceName }}'
         echo 'output_apimSubscriptionKey: ${{ steps.Infra.outputs.out_apimSubscriptionKey }}'
         echo 'output_OpenAIKeyValue: ${{ steps.Infra.outputs.out_OpenAIKeyValue }}'
         echo 'output_appInsightsApplicationId: = ${{ steps.Infra.outputs.out_appInsightsApplicationId }}'
         echo 'output_appInsightsAPIApplicationId: = ${{ steps.Infra.outputs.out_appInsightsAPIApplicationId }}'

    # Lock Resource Group
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'

    # Logout of Azure and Clear the Cache
    - name: Logout of Azure and Clear the Cache
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
          az cache purge
          az account clear

  ###########################################
  # Build App
  ###########################################
  build_application:
    runs-on: ubuntu-latest
    name: 'Build Application'
#    needs: [deploy_infrastructure]
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.dotnet_version }}

      # Run dotnet build and publish
      - name: dotnet build unit test and publish
        run: |
          dotnet restore
          dotnet build AzureOpenAIDemo.Web/AzureOpenAIDemo.Web.csproj --configuration ${{ env.dotnet_buildConfiguration }} --no-restore
          dotnet publish AzureOpenAIDemo.Web/AzureOpenAIDemo.Web.csproj --configuration ${{ env.dotnet_buildConfiguration }} -o './web'

      ###########################################
      # Upload Artifacts
      ###########################################
      - name: Upload Build Artifacts-Website
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: AzureOpenAIDemo.Web
          path: ${{ github.workspace }}/web

  ################################################################
  # Stage: Deploy to Web App
  ################################################################              
  deploy_application_to_webapp:
    name: Deploy Web Application
    needs: [deploy_infrastructure, build_application]
    environment:
      name: 'Dev'
      url: 'https://${{ needs.deploy_infrastructure.outputs.output_webSiteName }}.azurewebsites.net/'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ env.AZURE_CREDENTIALS }}

    - name: DEBUG ONLY Display Output Variables
      run: |
         echo 'output_webSiteName: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}'
         echo 'output_keyvaultName: ${{ needs.deploy_infrastructure.outputs.output_keyvaultName }}'
         echo 'output_appInsightsName: ${{ needs.deploy_infrastructure.outputs.output_appInsightsName }}'
         echo 'output_functionAppName: ${{ needs.deploy_infrastructure.outputs.output_functionAppName }}'
         echo 'output_apiServiceName: ${{ needs.deploy_infrastructure.outputs.output_apiServiceName }}'
         echo 'output_apimSubscriptionKey: ${{ needs.deploy_infrastructure.outputs.output_apimSubscriptionKey }}'
         echo 'output_OpenAIKeyValue: ${{ needs.deploy_infrastructure.outputs.output_OpenAIKeyValue }}'
         echo 'output_appInsightsApplicationId: = ${{ needs.deploy_infrastructure.outputs.output_appInsightsApplicationId }}'
         echo 'output_appInsightsAPIApplicationId: = ${{ needs.deploy_infrastructure.outputs.output_appInsightsAPIApplicationId }}'
#         echo 'output_out_AzureOpenAIKeyValue: = ${{ needs.deploy_infrastructure.outputs.output_AzureOpenAIKeyValue }}'
         
    # Unlock Resource Group
    - name: Ensure Resource Group is UnLocked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock delete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }}

    - name: Download Build Artifacts-Website Application
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: AzureOpenAIDemo.Web
        path: ${{ github.workspace }}/AzureOpenAIDemo.Web

    - name: 'Deploy Website Application'
      uses: azure/webapps-deploy@v2
      with:
          app-name: ${{ needs.deploy_infrastructure.outputs.output_webSiteName }}
          package: './AzureOpenAIDemo.Web'

    # Lock Resource Group
    - name: Ensure Resource Group is Locked
      uses: Azure/CLI@v1
      continue-on-error: true
      with:
        inlineScript: |
          az group lock create --lock-type CanNotDelete --name DontDeleteMe --resource-group ${{ env.Azure_Resource_GroupName }} --notes 'Prevent deletion of the resource group'

    # Logout of Azure and Clear the Cache
    - name: Logout of Azure and Clear the Cache
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
          az cache purge
          az account clear